/**
 * Load my app...
 */
var app = angular.module('MyApp', [
    'ngAnimate',
    'ui.materialize',
    'ngMessages',
    'ngRoute',
    'uiGmapgoogle-maps',
    'angular-loading-bar',
    'ngCookies'
  ]);
/**
 * Configure service
 */
app.config([
  'uiGmapGoogleMapApiProvider',
  '$cookiesProvider',
  function (uiGmapGoogleMapApiProvider, $cookiesProvider) {
    uiGmapGoogleMapApiProvider.configure({
      key: 'AIzaSyDZYt1LZydksFi5HC78apt6FOiQFuK-JVo',
      v: '3.20',
      libraries: 'weather,geometry,visualization'
    });
  }
]);
/**
 * Configure your routes
 */
app.config([
  '$routeProvider',
  function ($routeProvider) {
    // Système de routage
    $routeProvider.when('/', {
      templateUrl: 'partials/users.html',
      controller: 'UsersCtrl'
    }).when('/users', {
      templateUrl: 'partials/users.html',
      controller: 'UsersCtrl'
    }).when('/maps', {
      templateUrl: 'partials/maps.html',
      controller: 'MapCtrl'
    }).when('/map/:long/:lat', {
      templateUrl: 'partials/map.html',
      controller: 'MapCtrl'
    }).when('/user/:prenom/:nom', {
      templateUrl: 'partials/user.html',
      controller: 'UserCtrl'
    }).when('/contact', {
      templateUrl: 'partials/contact.html',
      controller: 'ContactCtrl'
    }).otherwise({ redirectTo: '/' });
  }
]);
/**
 * All Filters of you needs...
 * @Damien: Noublies pas de faire lefiltre ville.... :p
 */
app.filter('naissance', function () {
  return function (tableau, date) {
    if (date === undefined || date === null) {
      return tableau;
    }
    return _.filter(tableau, function (use) {
      return moment(use.birthday, 'DD/MM/YYYY') > moment(date);
    });
  };
});
app.filter('plus', function () {
  return function (tab, id) {
    obj = _.find(tab, function (obj) {
      return obj.id == id;
    });
    if (obj === undefined) {
      return false;
    }
    console.log(obj.compteur);
    return obj.compteur;
  };
});
app.filter('notes', function () {
  return function (tableau, note) {
    if (note === undefined || note === null) {
      return tableau;
    }
    return _.filter(tableau, function (use) {
      return use.noteBac >= note;
    });
  };
});
app.filter('range', function () {
  return function (tab, tranches) {
    //filters all true
    tranches = _.filter(tranches, function (elt) {
      return elt.checked === true;
    });
    if (tranches.length === 0) {
      return tab;
    }
    var tabFilter = [];
    _.each(tranches, function (tranche) {
      if (tranche.data === '10-25') {
        tabFilter.push(_.filter(tab, function (elt) {
          return elt.age >= 10 && elt.age <= 25;
        }));
      } else if (tranche.data === '25-45') {
        tabFilter.push(_.filter(tab, function (elt) {
          return elt.age >= 25 && elt.age <= 45;
        }));
      } else if (tranche.data === '45-60') {
        tabFilter.push(_.filter(tab, function (elt) {
          return elt.age >= 45 && elt.age <= 60;
        }));
      }
    });
    // concatener
    tabFilter = [].concat.apply([], tabFilter);
    return tabFilter;
  };
});
app.filter('sexe', function () {
  return function (sexe) {
    console.log();
    if (sexe === false) {
      return 'Femme';
    }
    return 'Homme';
  };
});
app.filter('age', function () {
  return function (tab, age) {
    return _.filter(tab, function (use) {
      return use.age;
    });
  };
});
app.controller('HeaderCtrl', [
  '$scope',
  '$rootScope',
  'filterFilter',
  '$http',
  function ($scope, $rootScope, filterFilter, $http) {
    $scope.searching = function () {
      //  $rootScope.users = filterFilter($rootScope.users, {nom: 'Lannister'}); // by attribute
      $rootScope.search = $scope.search;
      $rootScope.tri = $scope.tri;  // rootscope me sert a controller des données en dehors de ma scope courante
    };
  }
]);
app.controller('ContactCtrl', [
  '$scope',
  '$filter',
  '$http',
  function ($scope, $filter, $http) {
  }
]);
app.controller('UsersCtrl', [
  '$scope',
  '$filter',
  '$http',
  '$cookies',
  function ($scope, $filter, $http, $cookies) {
    var currentTime = new Date();
    // Bonus: charger les users by JSON
    // //edit from https://jsonblob.com/57a59a90e4b0dc55a4eae792
    // befor: https://jsonblob.com/api/jsonBlob/57a59a90e4b0dc55a4eae792
    var users;
    var myOnes = $scope.myOnes = $cookies.get('myOnes') ? $cookies.myOnes : [];
    $http.get('https://jsonblob.com/api/jsonBlob/57a8d915e4b0dc55a4eb7378').success(function (response) {
      $scope.users = users = response;
      $scope.nbUsers = $scope.users.length;
    });
    // tranches
    $scope.tranches = [
      {
        'data': '10-25',
        'checked': false
      },
      {
        'data': '25-45',
        'checked': false
      },
      {
        'data': '45-60',
        'checked': false
      }
    ];
    $scope.date = '01/01/1950';
    $scope.tousMineur = function () {
      return _.every($scope.users, function (user) {
        return user.age < 18;
      });
    };
    $scope.onePlus = function (id) {
      var myOnes = $scope.myOnes = JSON.parse($cookies.get('myOnes'));
      obj = _.find(myOnes, function (obj) {
        return obj.id == id;
      });
      // console.log(myOnes, _.findWhere(myOnes,{id: id}));
      if (obj === undefined) {
        // initialize myOne
        myOnes.push({
          'id': id,
          'compteur': 1
        });
      } else {
        // update myOne
        obj.compteur = obj.compteur + 1;
      }
      console.log(myOnes);
      // Setting a cookie
      $cookies.put('myOnes', JSON.stringify(obj));
    };
    $scope.moyenneAge = function () {
      var naissanceFilter = $filter('naissance');
      var rangeFilter = $filter('range');
      var notesFilter = $filter('notes');
      var resFilter = naissanceFilter($scope.users, $scope.date);
      var notesFilter = notesFilter(resFilter, $scope.notesBac);
      var rangeFilter = rangeFilter(notesFilter, $scope.tranches);
      // qui peut etre un filtre ...(merci Damien ^^)
      var ville = $scope.cities;
      if (ville !== undefined) {
        var rangeFilter = _.filter(rangeFilter, function (use) {
            return use.ville == ville;
          });
      }
      // MAJ nb users
      if (rangeFilter instanceof Array) {
        $scope.nbUsers = rangeFilter.length;
        return _.reduce(rangeFilter, function (memo, num) {
          return memo + num.age;
        }, 0) / (rangeFilter.length === 0 ? 1 : rangeFilter.length);
      }
      return rangeFilter;
    };
    $scope.removeUser = function (user) {
      var index = $scope.users.indexOf(user);
      $scope.users.splice(index, 1);
    };
    $scope.add = function (form) {
      console.log($scope.nom, $scope.age, $scope.dob, $scope.photo, $scope.noteauBac, $scope.sexe, $scope.ville, $scope.biographie);
      if (form.$valid) {
        $scope.users.push({
          nom: $scope.nom,
          prenom: $scope.prenom,
          age: parseInt($scope.age),
          photo: $scope.photo,
          birthday: $scope.dob,
          noteBac: parseInt($scope.noteauBac),
          sexe: $scope.sexe,
          ville: $scope.ville,
          biographie: $scope.biographie
        });
        $scope.nom = $scope.sexe = $scope.ville = $scope.biographie = $scope.prenom = $scope.age = $scope.photo = $scope.dob = $scope.noteauBac = '';
      } else {
        console.log('Formulaire invalide', form);
      }
    };
  }
]);
app.controller('UserCtrl', [
  '$scope',
  '$routeParams',
  '$http',
  function ($scope, $routeParams, $http) {
    $scope.prenom = $routeParams.prenom;
    $scope.nom = $routeParams.nom;
    var user;
    $http.get('https://jsonblob.com/api/jsonBlob/57a86573e4b0dc55a4eb50a7').success(function (response) {
      users = response;
      var user = $scope.user = _.find(users, function (user) {
          return user.nom == $scope.nom && user.prenom == $routeParams.prenom;
        });
    });
  }
]);
app.controller('MapCtrl', [
  '$scope',
  '$routeParams',
  function ($scope, $routeParams) {
    $scope.map = {
      center: {
        latitude: $routeParams.lat,
        longitude: $routeParams.long
      },
      zoom: 13
    };
    $scope.markers = [{
        coord: {
          latitude: $routeParams.lat,
          longitude: $routeParams.long
        },
        email: 'netapsys@netapsys.fr',
        icon: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi.png',
        id: 412
      }];
  }
]);
app.controller('MapsCtrl', [
  '$scope',
  '$http',
  function ($scope, $http) {
    console.log('coucou');
    $scope.map = {
      center: {
        latitude: 45.75,
        longitude: 4.85
      },
      zoom: 10
    };
    $scope.markers = [];
    $http.get('https://jsonblob.com/api/jsonBlob/57a86573e4b0dc55a4eb50a7').success(function (response) {
      _.each(response, function (elt) {
        $scope.markers.push({
          coord: {
            latitude: elt.geolocalisation.lat,
            longitude: elt.geolocalisation.long
          },
          email: 'netapsys@netapsys.fr',
          icon: 'https://maps.gstatic.com/mapfiles/api-3/images/spotlight-poi.png',
          id: 412
        });
      });
    });
    $scope.clickMarker = function (marker) {
      alert(marker.email);  //Affichera l'email du point sur lequel on a cliqué
    };
  }
]);